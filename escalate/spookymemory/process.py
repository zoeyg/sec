from scapy.all import *
import binascii

def readPackets():
	capture = rdpcap('./spookymemory.pcap')
	lastPacketTime = None
	onesAndZeros = ''
	for packet in capture:
		if packet[ICMP].type == 8: # 0 for reply, 8 for request
			if lastPacketTime is not None:
				diff = packet.time - lastPacketTime
				if (diff > 0.25):
					onesAndZeros += '1'
				else:
					onesAndZeros += '0'
			lastPacketTime = packet.time
	return onesAndZeros

def chunkstring(string, length):
    return (string[0+i:length+i] for i in range(0, len(string), length))

def convertChar(string):
	number = int(string, 2)
	if (number != 0):
		return chr(int(string, 2))
	return ' '

def reverseString(string):
	return string[::-1]

# raw string
#raw = '000000000000000000000000101100111011100110110100101100101000101010101110111011011011011110110111111001011110110011100010111001001011011011100000101101101110110111100100111000011110011011101100111000011011011111100111101101111011001110110001101100111110010010110110101100011110010011100001111011011110011111100000111001011011000010101000'

# truncated ones and zeros
#onesAndZeros = '101100111011100110110100101100101000101010101110111011011011011110110111111001011110110011100010111001001011011011100000101101101110110111100100111000011110011011101100111000011011011111100111101101111011001110110001101100111110010010110110101100011110010011100001111011011110011111100000111001011011000010101000'

#print hex in order
#print "%x" % int(onesAndZeros, 2)
# b3b9b4b28aaeedb7b7e5ece2e4b6e0b6ede4e1e6ece1b7e7b7b3b1b3e4b6b1e4e1ede7e0e5b0a8

# reverse the endian-ness
#print ''.join(list(map(reverseString, chunkstring(onesAndZeros, 8))))

#onesAndZerosEndian = '110011011001110100101101010011010101000101110101101101111110110111101101101001110011011101000111001001110110110100000111011011011011011100100111100001110110011100110111100001111110110111100111111011011100110110001101110011010010011101101101100011010010011110000111101101111110011100000111101001110000110100010101'

#hex in reversed endian
#print "%x" % int(onesAndZeros, 2)
#cd9d2d4d5175b7ededa73747276d076db72787673787ede7edcd8dcd276d8d2787b7e707a70d15

#fout = open('test-r.bin', 'wb')
#fout.write(
#    binascii.unhexlify('cd9d2d4d5175b7ededa73747276d076db72787673787ede7edcd8dcd276d8d2787b7e707a70d15')
#)